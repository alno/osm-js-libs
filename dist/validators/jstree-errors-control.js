// Generated by CoffeeScript 1.3.1
(function() {
  var JstreeValidatorErrorsControl,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  JstreeValidatorErrorsControl = (function() {

    JstreeValidatorErrorsControl.name = 'JstreeValidatorErrorsControl';

    function JstreeValidatorErrorsControl(elem, layer, options) {
      var e;
      this.elem = elem;
      this.layer = layer;
      this.options = options != null ? options : {};
      this.stateChanged = __bind(this.stateChanged, this);

      this.elem.jstree({
        plugins: ["json_data", "checkbox", "ui"],
        json_data: {
          data: (function() {
            var _i, _len, _ref, _results;
            _ref = this.options.errors;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              e = _ref[_i];
              _results.push(this.nodeJson(e));
            }
            return _results;
          }).call(this)
        },
        checkbox: {
          override_ui: true
        }
      }).bind("change_state.check_box.jstree", this.stateChanged).bind("loaded.jstree", this.stateChanged);
      this.tree = jQuery.jstree._reference(this.elem);
      this.stateChanged();
    }

    JstreeValidatorErrorsControl.prototype.nodeJson = function(err) {
      var chd;
      return {
        data: err.name,
        attr: {
          "data-error-type": err.type
        },
        children: (function() {
          var _i, _len, _ref, _results;
          _ref = err.children || [];
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            chd = _ref[_i];
            _results.push(this.nodeJson(chd));
          }
          return _results;
        }).call(this)
      };
    };

    JstreeValidatorErrorsControl.prototype.stateChanged = function() {
      var node, _i, _j, _len, _len1, _ref, _ref1, _results;
      _ref = this.tree.get_checked(null, true);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        node = _ref[_i];
        if ($(node).data('error-type')) {
          this.layer.enableError($(node).data('error-type'));
        }
      }
      _ref1 = this.tree.get_unchecked(null, true);
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        node = _ref1[_j];
        if ($(node).data('error-type')) {
          _results.push(this.layer.disableError($(node).data('error-type')));
        }
      }
      return _results;
    };

    return JstreeValidatorErrorsControl;

  })();

  jQuery.fn.validatorErrorsControl = function(layer, options) {
    return this.each(function() {
      return new JstreeValidatorErrorsControl($(this), layer, options);
    });
  };

}).call(this);
